<!-- views/user/orderDetail.ejs -->

<div class="bg-black text-white min-h-screen flex flex-col">
    <%- include('../patch/topper.ejs') %>
  
    <div class="container mx-auto py-8 px-4">
      <!-- Breadcrumb Navigation -->
      <nav class="mb-4">
        <ol class="list-reset flex text-blue-400">
          <li><a href="/" class="hover:underline">Home</a></li>
          <li><span class="mx-2">/</span></li>
          <li><a href="/profile/order" class="hover:underline">Orders</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-500">Order Details</li>
        </ol>
      </nav>
      <h1 class="text-3xl font-bold mb-6">Order Details</h1>
  
      <!-- Order Information -->
      <div class="bg-gray-900 p-6 rounded-lg mb-6">
        <p><strong>Order ID:</strong> <%= order._id %></p>
        <p><strong>Order Date:</strong> <%= order.createdAt.toLocaleDateString() %></p>
        <p><strong>Status:</strong> <span class="<%= order.orderStatus === 'Cancelled' ? 'text-red-500' : 'text-green-500' %>"><%= order.orderStatus %></span></p>
        <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
      </div>
  
      <!-- Shipping Address -->
      <h2 class="text-2xl font-bold mb-4">Shipping Address</h2>
      <div class="bg-gray-900 p-6 rounded-lg mb-6">
        <% if (order.address) { %>
          <p><%= order.address.name %></p>
          <p><%= order.address.buildingName %>, <%= order.address.street %></p>
          <p><%= order.address.city %>, <%= order.address.state %>, <%= order.address.country %></p>
          <p><%= order.address.pincode %></p>
          <p><strong>Mobile:</strong> <%= order.address.mobile %></p>
        <% } else { %>
          <p>No shipping address available.</p>
        <% } %>
      </div>
  
      <!-- Ordered Items -->
      <h2 class="text-2xl font-bold mb-4">Items</h2>
      <div class="bg-gray-900 p-6 rounded-lg mb-6">
        <% order.items.forEach(item => { %>
          <div class="flex flex-col md:flex-row justify-between items-center bg-gray-800 p-4 rounded-lg mb-4 shadow-md">
            <div class="flex items-center mb-4 md:mb-0">
              <img src="<%= item.product.image[1] %>" alt="<%= item.product.name %>" class="w-20 h-20 mr-4" style="height: 4cm; width: 4cm; padding-right: 5mm;">
              <div class="flex-1">
                <p class="text-lg font-semibold"><%= item.product.name %></p>
                <p><span class="line-through">₹<%= item.price %></span></p>
                <p>Price:<span class="text-orange-500">₹<%= item.discountPrice %></span></p>
                <p>Quantity: <%= item.quantity %></p>
                <p>Subtotal: ₹<%= item.discountPrice * item.quantity %></p>
              </div>
            </div>
            <div class="ml-4">
              <span class="inline-flex items-center px-3 py-1 rounded-full 
                <%= item.itemStatus === 'Cancelled' ? 'bg-red-600 text-white' : 'bg-green-600 text-white' %>">
                <i class="<%= item.itemStatus === 'Cancelled' ? 'fas fa-times-circle' : 'fas fa-check-circle' %> mr-1"></i>
                Status: <%= item.itemStatus %>
              </span>
            </div>
          </div>
        <% }) %>
      </div>
  
      <!-- Order Summary -->
      <h2 class="text-2xl font-bold mb-4">Order Summary</h2>
      <div class="bg-gray-900 p-6 rounded-lg mb-6">
        <div class="flex flex-col md:flex-row justify-between mb-2">
          <p>Subtotal:</p>
          <p>₹<%= order.subtotal %></p>
        </div>
        <div class="flex flex-col md:flex-row justify-between mb-2">
          <p>Discount:</p>
          <p class="text-red-500">-₹<%= item.discountPrice %></p>
        </div>
        <div class="flex flex-col md:flex-row justify-between mb-2">
          <p>Delivery Charges:</p>
          <p>₹0</p>
        </div>
        <hr class="border-gray-700 my-2">
        <div class="flex flex-col md:flex-row justify-between font-bold">
          <p>Total Amount:</p>
          <p>₹<%= order.total %></p>
        </div>
      </div>
  
      <!-- Optional: Cancel Order Button -->
      <% if (item.itemStatus !== 'Cancelled' && item.itemStatus !== 'Delivered' && (order.orderStatus === 'Pending' || order.orderStatus === 'Confirmed')  ) { %>
        <button class="cancel-order-btn bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700" data-order-id="<%= order._id %>" data-item-id="<%= item._id %>">Cancel Order</button>
      <% } %>
    </div>
  
    <%- include('../patch/bottom.ejs') %>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const cancelButtons = document.querySelectorAll('.cancel-order-btn');
  
      cancelButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const orderId = this.getAttribute('data-order-id');
          const itemId = this.getAttribute('data-item-id');
  
          Swal.fire({
            title: 'Are you sure?',
            text: "You want to cancel this item ",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, cancel it!',
            customClass: {
              popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
              title: 'text-xl font-bold',
              content: 'text-base mb-4',
              confirmButton: 'bg-green-600 text-white rounded-lg px-4 py-2 hover:bg-green-700 transition duration-200 ease-in-out',
              cancelButton: 'bg-red-600 text-white rounded-lg px-4 py-2 hover:bg-red-700 transition duration-200 ease-in-out'
            }
          }).then((result) => {
            if (result.isConfirmed) {
              cancelOrder(orderId, itemId);
            }
          });
        });
      });
  
      function cancelOrder(orderId, itemId) {
        fetch(`/order/cancel-item/${orderId}/${itemId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          Swal.fire({
            title: 'Cancelled!',
            text: 'Your order has been cancelled.',
            icon: 'success',
            customClass: {
              popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
              title: 'text-2xl font-bold', 
              content: 'text-lg',
              confirmButton: 'bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700', 
            },
            buttonsStyling: false, 
          }).then(() => {
            window.location.reload();
          });
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire(
            'Error!',
            'There was a problem cancelling your order.',
            'error'
          );
        });
      }
    });
  </script>