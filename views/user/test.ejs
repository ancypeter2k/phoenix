<style>

    .coupon-applied {
        background-color: #4CAF50;
        color: white;
        padding: 8px;
        border-radius: 4px;
        margin-top: 8px;
        display: none;
    }
  
  
    /* Basic modal styling */
  .modal {
      display: none;
      position: fixed;
      z-index: 1;
      padding-top: 100px;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0, 0, 0);
      background-color: rgba(0, 0, 0, 0.4);
  }
  
  .modal-content {
      background-color: #fefefe;
      margin: auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
  }
  
  .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
  }
  
  .close:hover,
  .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
  }
  </style>
  <div class="bg-black text-white min-h-screen flex flex-col">
    <%- include('../patch/topper') %>
  
    <div class="container mx-auto py-8 px-4">
      
      <div class="flex flex-col md:flex-row md:space-x-4">
        <!-- Left Column: Order Summary and Address Section -->
        <div class="flex-1 mb-6">
          <!-- Order Summary -->
          <h1 class="text-2xl font-bold mb-4">Order Summary</h1>
  
        <!-- flash message  -->
       <%- include('../patch/messages.ejs') %>
  
  <!-- Add your other HTML content here -->
          <div class="bg-gray-900 shadow-lg rounded-lg p-4">
            <% cart.items.forEach(item => { %>
              <div class="flex justify-between border-b pb-4 mb-4">
                <div class="flex">
                  <img src="<%= item.product.image[0] %>" class="mr-4" style="height: 4cm; width: 4cm; padding-right: 5mm;">
                  <div>
                    <p class="text-lg font-semibold"><%= item.product.name %></p>
                    <p class="text-gray-400">Price: ₹<%= item.price %></p>
                    <p class="text-gray-400">Discounted Price: ₹<%= item.discountPrice %> x <%= item.quantity %></p>
                  </div>
                </div>
                <p class="text-lg">₹<%= item.discountPrice * item.quantity %></p>
              </div>
            <% }) %>
          </div>
  
          <!-- Add New Address Button -->
          <button id="newAddressBtn" class="mt-4 bg-blue-600 text-white py-2 px-4 rounded">Add New Address</button>
  
          <!-- New Address Form (hidden by default) -->
          <form id="newAddressForm" class="bg-gray-900 p-4 mt-4 hidden shadow-lg rounded-lg" action="/checkout/add-address" method="POST">
            <div class="mb-4">
              <label class="block mb-1 font-bold">Name</label>
              <input type="text" name="name" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">Building Name</label>
              <input type="text" name="buildingName" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">Street</label>
              <input type="text" name="street" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">City</label>
              <input type="text" name="city" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">State</label>
              <input type="text" name="state" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">Country</label>
              <input type="text" name="country" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">Pincode</label>
              <input type="text" name="pincode" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="mb-4">
              <label class="block mb-1 font-bold">Mobile</label>
              <input type="text" name="mobile" class="w-full border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
            </div>
            <div class="flex justify-between">
              <button type="submit" class="bg-green-600 text-white py-2 px-4 rounded">Save Address</button>
              <button type="button" id="cancelAddressBtn" class="bg-red-600 text-white py-2 px-4 rounded">Cancel</button>
            </div>
          </form>
  
          <!-- Checkout Form -->
          <form action="/checkout/place-order" method="POST">
            <!-- Address Section -->
            <div class="mb-6 mt-4">
              <h2 class="text-2xl font-bold mb-4">Shipping Address</h2>
              <div class="space-y-4">
                <% addresses.forEach(address => { %>
                  <div class="p-4 bg-gray-900 shadow-lg rounded-lg">
                    <input type="radio" name="addressId" value="<%= address._id %>" class="mr-2" required>
                    <p><%= address.name %>, <%= address.buildingName %>, <%= address.street %>, <%= address.city %>, <%= address.state %>, <%= address.country %>, <%= address.pincode %></p>
                    <p class="text-gray-400"><%= address.mobile %></p>
                  </div>
                <% }) %>
              </div>
            </div>
  
            <!-- Payment Methods -->
            <div class="mb-6">
              <h2 class="text-2xl font-bold mb-4">Payment Method</h2>
              <div class="space-y-4">
                <div class="bg-gray-900 p-4 shadow-lg rounded-lg">
                  <input type="radio" name="paymentMethod" value="COD" class="mr-2" required> Cash on Delivery
                </div>
                <div class="bg-gray-900 p-4 shadow-lg rounded-lg">
                  <input type="radio" id="razorpay" name="paymentMethod" value="Razorpay" class="mr-2"> Razorpay
                </div>
                <div class="bg-gray-900 p-4 shadow-lg rounded-lg">
                  <input type="radio" name="paymentMethod" value="Wallet" class="mr-2"> Wallet
                </div>
              </div>
            </div>
  
            <!-- Place Order Button -->
            <button type="submit" class="w-full bg-green-700 text-white py-3 rounded-lg">Place Order</button>
          </form>
        </div>
          <!-- Coupon Details Section -->
          <div class=" mt-4">
            <h3 class="text-xl font-bold mb-4">Apply Coupon</h3>
            <form action="/checkout/apply-coupon/${couponId}" method="POST" class="flex items-center space-x-4 bg-gray-900 p-4 shadow-lg rounded-lg">
              <div class="coupon-section">
                  <input id="couponCode" name="couponCode" type="text" placeholder="Enter Coupon Code" class="flex-1 border border-gray-600 p-2 rounded bg-gray-800 text-white" required>
                  <button id="applyCouponBtn" type="submit" class="bg-blue-600 text-white py-2 px-4 rounded">Apply</button>
                  <button id="removeCouponBtn" type="button" class="bg-red-600 text-white py-2 px-4 rounded hidden">Remove</button>
                  <p id="couponMessage" class="hidden"></p>
              </div>
            </form>
          </div>
  
        <!-- Toast Notification -->
        <div id="toastMessage" class="fixed bottom-4 right-4 hidden bg-green-500 text-white p-4 rounded shadow-lg">
          <span id="toastText"></span>
        </div>
        <!-- Right Column: Price Details Section -->
        <div class="w-full md:w-1/3 mb-6 lg:sticky lg:self-start lg:top-4">
          <h2 class="text-2xl font-bold mb-4">Price Details</h2>
          <div class="bg-gray-900 shadow-lg rounded-lg p-4 space-y-4">
              <div class="flex justify-between">
                  <p>Items: <%= cart.items.length %></p>
                  <p>Price: ₹<span id="totalAmount"><%= originalPrice %></span></p>
              </div>
              <div class="flex justify-between" id="discountAmount">
                  <p>Discount:</p>
                  <p class="text-red-500">-₹<span><%= Math.floor(totalDiscount) %></span></p>
              </div>
              <div class="flex justify-between">
                  <p>Coupon Applied:</p>
                  <p class="text-red-500">-₹<span id="couponDiscount"><%= Math.floor(cart.couponDiscount) %></span></p>
              </div>
              <div class="flex justify-between">
                  <p>Delivery Charges:</p>
                  <p class="text-green-500">FREE</p>
              </div>
              <div class="flex justify-between">
                  <p>Packaging Charge:</p>
                  <p class="text-green-500">FREE</p>
              </div>
              <hr class="my-2">
              <div class="flex justify-between font-bold">
                  <p>Total Amount:</p>
                  <p>₹<span id="finalAmount"><%= Math.floor(cart.total - cart.couponDiscount) %></span></p>
              </div>
          </div>
        </div>
      </div>
    </div>
  
    <%- include('../patch/bottom') %>
  </div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  
  <script>
    const razorpayKey = "<%= razorpayKey %>"
    // Toggle New Address Form
    document.getElementById('newAddressBtn').addEventListener('click', function () {
        document.getElementById('newAddressForm').classList.toggle('hidden');
    });
    
    // Cancel New Address Form
    document.getElementById('cancelAddressBtn').addEventListener('click', function () {
        document.getElementById('newAddressForm').classList.add('hidden');
    });
    
    // Address Selection Update
    document.getElementById('addressForm').addEventListener('submit', async function (e) {
        e.preventDefault();
    
        const selectedAddressElement = document.querySelector('input[name="addressId"]:checked');
        if (!selectedAddressElement) {
            Swal.fire({
                title: 'Warning',
                icon: 'warning',
                text: 'Please select an address.',
                confirmButtonText: 'OK',
                customClass: {
                    confirmButton: 'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
                    popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                    text: 'text-green-400 font-bold text-2xl',
                    title: 'text-green-400 font-bold text-2xl'
                },
                buttonsStyling: false
            });
            return;
        }
    
        const selectedAddress = selectedAddressElement.value;
    
        try {
            const response = await fetch('/checkout/address/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ addressId: selectedAddress })
            });
            const result = await response.json();
    
            if (result.success) {
                document.getElementById('paymentSection').classList.remove('hidden');
                
                // Check totalAmount for COD eligibility
                const totalAmount = Math.floor(cart.total) ;  // Server-side value for total amount
                if (totalAmount > 1000) {
                    document.querySelector('input[value="COD"]').disabled = true; // Disable COD option
                    Swal.fire({
                        title: 'Notice',
                        icon: 'info',
                        text: 'Cash on Delivery is not available for orders above ₹1000.',
                        confirmButtonText: 'OK',
                        customClass: {
                            confirmButton: 'bg-blue-600 text-white py-2 px-4 rounded',
                            popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                            text: 'text-green-400 font-bold text-2xl',
                            title: 'text-green-400 font-bold text-2xl'
                        },
                        buttonsStyling: false
                    });
                }
            } else {
                Swal.fire({
                    title: 'Error',
                    icon: 'error',
                    text: result.message,
                    confirmButtonText: 'OK',
                    customClass: {
                        confirmButton: 'bg-red-600 text-white py-2 px-4 rounded',
                        popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                        text: 'text-red-400 font-bold text-2xl',
                        title: 'text-red-400 font-bold text-2xl'
                    },
                    buttonsStyling: false
                });
            }
        } catch (error) {
            console.error('Error updating address:', error);
            Swal.fire({
                title: 'Error',
                icon: 'error',
                text: 'An error occurred while updating the address.',
                confirmButtonText: 'OK',
                customClass: {
                    confirmButton: 'bg-red-600 text-white py-2 px-4 rounded',
                    popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                    text: 'text-red-400 font-bold text-2xl',
                    title: 'text-red-400 font-bold text-2xl'
                },
                buttonsStyling: false
            });
        }
    });
    
    // Apply Coupon Code
    document.getElementById('applyCouponBtn').addEventListener('click', async (event) => {
        event.preventDefault(); // Prevent the form from submitting normally
        const couponCode = document.getElementById('couponCode').value;
        const totalAmount = parseFloat(document.getElementById('totalAmount').innerText);
        const couponMessage = document.getElementById('couponMessage');
    
        try {
            const response = await fetch('/checkout/apply-coupon/${couponCode}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ couponCode, totalAmount }),
            });
            const data = await response.json();
    
            if (data.success) {
                couponMessage.innerText = data.message;
                couponMessage.classList.remove('text-red-600', 'hidden');
                couponMessage.classList.add('text-green-600');
                document.getElementById('discountAmount').innerText = data.discount;
                document.getElementById('finalAmount').innerText = (totalAmount - data.discount).toFixed(2);
                document.getElementById('removeCouponBtn').classList.remove('hidden');
                document.getElementById('applyCouponBtn').classList.add('hidden');
            } else {
                couponMessage.innerText = data.message;
                couponMessage.classList.remove('text-green-600', 'hidden');
                couponMessage.classList.add('text-red-600');
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
            couponMessage.innerText = 'An error occurred while applying the coupon.';
            couponMessage.classList.remove('text-green-600', 'hidden');
            couponMessage.classList.add('text-red-600');
        }
    });
    
    // Remove Coupon
    document.getElementById('removeCouponBtn').addEventListener('click', () => {
        const couponMessage = document.getElementById('couponMessage');
        document.getElementById('couponCode').value = '';
        document.getElementById('discountAmount').innerText = '0';
        document.getElementById('finalAmount').innerText = document.getElementById('totalAmount').innerText;
        couponMessage.classList.add('hidden');
        document.getElementById('removeCouponBtn').classList.add('hidden');
        document.getElementById('applyCouponBtn').classList.remove('hidden');
    });
    
    // // Place Order Button
    document.getElementById('placeOrderBtn').addEventListener('click', async () => {
        const selectedAddress = document.querySelector('input[name="addressId"]:checked');
        const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
    
        if (!selectedAddress) {
            Swal.fire({
                title: 'Warning',
                icon: 'warning',
                text: 'Please select an address before placing the order.',
                confirmButtonText: 'OK',
                customClass: {
                    confirmButton: 'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
                    popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                    text: 'text-green-400 font-bold text-2xl',
                    title: 'text-green-400 font-bold text-2xl'
                },
                buttonsStyling: false
            });
            return;
        }
    
        if (!selectedPaymentMethod) {
            Swal.fire({
                title: 'Warning',
                icon: 'warning',
                text: 'Please select a payment method before placing the order.',
                confirmButtonText: 'OK',
                customClass: {
                    confirmButton: 'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
                    popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                    text: 'text-green-400 font-bold text-2xl',
                    title: 'text-green-400 font-bold text-2xl'
                },
                buttonsStyling: false
            });
            return;
        }
    
        const orderData = {
            addressId: selectedAddress.value,
            paymentMethod: selectedPaymentMethod.value
        };
    console.log('orderData:',orderData)
        try {
            const response = await axios.post('/checkout/place-order', orderData);
            const data = response.data;
    console.log('data',data)
            if (data.success && selectedPaymentMethod.value === 'Razorpay') {
                const options = {
                    key: razorpayKey,
                    amount: data.amount,
                    currency: 'INR',
                    name: "PHOENIX",
                    image: "images/img1.jpg",
                    description: "Test transaction",
                    order_id: data.razorpayOrderId,
                    handler: async function (response) {
                      console.log("fsdfsfsdfs");
                      
                        const paymentResponse = await axios.post('/checkout/payment/verify', {
                            razorpayOrderId: data.razorpayOrderId,
                            paymentId: response.razorpay_payment_id,
                            signature: response.razorpay_signature,
                            OrderId: data.OrderId,
                            address: selectedAddress.value,
                            paymentMethod: selectedPaymentMethod.value
                        });
    
                        const paymentData = paymentResponse.data;
                        if (paymentData.success) {
                            window.location.href = '/checkout/order-confirmation';
                        } else {
                            Swal.fire({
                                title: 'Warning',
                                icon: 'warning',
                                text: paymentData.message,
                                confirmButtonText: 'OK',
                                customClass: {
                                    confirmButton: 'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
                                    popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                                    text: 'text-green-400 font-bold text-2xl',
                                    title: 'text-green-400 font-bold text-2xl'
                                },
                                buttonsStyling: false
                            });
                        }
                    },
                    prefill: {
                        name: "Ancy",
                        email: "ancy123@gmail.com",
                        contact: "1234567890"
                    },
                    theme: {
                        color: "#000000"
                    }
                };
                const razorpay = new Razorpay(options);
                razorpay.open();
                razorpay.on('payment.failed', function(response) {
                    window.location.href = '/checkout/order-failed';
                });
            } else if (data.success) {
                window.location.href = '/checkout/order-confirmation';
            } else {
                Swal.fire({
                    title: 'Error',
                    icon: 'error',
                    text: data.message,
                    confirmButtonText: 'OK',
                    customClass: {
                        confirmButton: 'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
                        popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                        text: 'text-green-400 font-bold text-2xl',
                        title: 'text-green-400 font-bold text-2xl'
                    },
                    buttonsStyling: false
                });
            }
        } catch (error) {
            console.error('Error placing order:', error);
            Swal.fire({
                title: 'Error',
                icon: 'error',
                text: error.response?.data.message || 'An error occurred while placing the order.',
                confirmButtonText: 'OK',
                customClass: {
                    confirmButton: 'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
                    popup: 'bg-gray-900 text-white rounded-lg shadow-lg p-6',
                    text: 'text-green-400 font-bold text-2xl',
                    title: 'text-green-400 font-bold text-2xl'
                },
                buttonsStyling: false
            });
        }
    });
  
     //Place Order Button
    //  document.getElementById('placeOrderBtn').addEventListener('click', async () => {
    //   const selectedAddress = document.querySelector('input[name="addressId"]:checked');
    //   const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
    //   if(!selectedAddress) {
    //     Swal.fire({
    //       title:'warning',
    //       icon:'warning',
    //       text:'Please select an address before placing the order.',
    //       confirmButtonText:'ok',
    //       customClass:{
    //         confirmButton:'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
    //         popup:'bg-gray-900 text-white rounded-lg shadow-lg p-6',
    //         text:'text-green-400 font-bold text-2xl',
    //         title:'text-green-400 font-bold text-2xl'
    //        },
    //        buttonsStyling:false
    //     })
    //     return;
    //   }
    //   if(!selectedPaymentMethod) {
    //     Swal.fire({
    //       title:'warning',
    //       icon:'warning',
    //       text:'Please select a payment method before placing the order.',
    //       confirmButtonText:'ok',
    //       customClass:{
    //         confirmButton:'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
    //         popup:'bg-gray-900 text-white rounded-lg shadow-lg p-6',
    //         text:'text-green-400 font-bold text-2xl',
    //         title:'text-green-400 font-bold text-2xl'
    //        },
    //        buttonsStyling:false
    //     })
    //     return;
    //   }
  
    //   // Prepare data for the request
    //   const orderData = {
    //     addressId: selectedAddress.value,
    //     paymentMethod: selectedPaymentMethod.value
    //   };
  
    //   try {
    //     // Submit the form using Axios
    //     const response = await axios.post('/checkout/place-order', orderData);
    //     const data = response.data;
  
    //     if (data.success && selectedPaymentMethod.value === 'Razorpay') {
    //       const options = {
    //         key: razorpayKey,
    //         amount: data.amount,
    //         currency: 'INR',
    //         name: "PHOENIX",
    //         image: "images/img1.jpg",
    //         description: "test transaction by Achu A",
    //         order_id: data.razorpayOrderId,
    //         handler: async function (response) {
    //           const paymentResponse = await axios.post('/checkout/payment/verify', {
    //             razorpayOrderId: data.razorpayOrderId,
    //             paymentId: response.razorpay_payment_id,
    //             signature: response.razorpay_signature,
    //             OrderId: data.OrderId,
    //             address: selectedAddress.value,
    //             paymentMethod: selectedPaymentMethod.value
    //           });
  
    //           const paymentData = paymentResponse.data;
    //           if (paymentData.success) {
    //             window.location.href = '/checkout/order-confirmation';
    //           } else {
    //             Swal.fire({
    //               title:'warning',
    //               icon:'warning',
    //               text:paymentData.message,
    //               confirmButtonText:'ok',
    //               customClass:{
    //                 confirmButton:'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
    //                 popup:'bg-gray-900 text-white rounded-lg shadow-lg p-6',
    //                 text:'text-green-400 font-bold text-2xl',
    //                 title:'text-green-400 font-bold text-2xl'
    //                },
    //                buttonsStyling:false
    //             })
    //           }
    //         },
    //               prefill: {
    //                     name: "Ancy",
    //                     email: "ancy123@gmail.com",
    //                     contact: "1234567890"
    //                 },
    //         theme: {
    //           color: "#000000"
    //         }
    //       };
    //       const razorpay = new Razorpay(options);
    //       razorpay.open();
    //       razorpay.on('payment.failed', function(response){
    //         window.location.href = '/checkout/order-failed';
    //       })
    //     } else if (data.success) {
    //       window.location.href = '/checkout/order-confirmation';
    //     } else {
    //       Swal.fire({
    //         title:'warning',
    //         icon:'warning',
    //         text:data.message,
    //         confirmButtonText:'ok',
    //         customClass:{
    //           confirmButton:'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
    //           popup:'bg-gray-900 text-white rounded-lg shadow-lg p-6',
    //           text:'text-green-400 font-bold text-2xl',
    //           title:'text-green-400 font-bold text-2xl'
    //          },
    //          buttonsStyling:false
    //       })
    //     }
    //   } catch (error) {
    //     console.error('Error placing order:', error);
    //     Swal.fire({
    //       title:'warning',
    //       icon:'warning',
    //       text:error.response.data.message,
    //       confirmButtonText:'ok',
    //       customClass:{
    //         confirmButton:'bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600',
    //         popup:'bg-gray-900 text-white rounded-lg shadow-lg p-6',
    //         text:'text-green-400 font-bold text-2xl',
    //         title:'text-green-400 font-bold text-2xl'
    //        },
    //        buttonsStyling:false
    //     })
    //   }
    // });
  
  
    
  
    // apply coupon code
    document.getElementById('applyCouponBtn').addEventListener('click', async () => {
      const couponCode = document.getElementById('couponCode').value;
      const totalAmount = parseFloat(document.getElementById('totalAmount').innerText);
      const response = await fetch('/checkout/apply-coupon/${couponCode}', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ couponCode, totalAmount }),
      });
      const data = await response.json();
      document.getElementById('couponMessage').innerText = data.message;
  
      if (data.success) {
        document.getElementById('couponMessage').classList.remove('text-red-400');
        document.getElementById('couponMessage').classList.add('text-green-400');
        document.getElementById('removeCouponBtn').classList.remove('hidden');
        document.getElementById('applyCouponBtn').classList.add('hidden');
  
        // update coupon discount
        document.querySelector('.text-red-500').innerText = `-₹${Math.floor(data.discountAmount)}`;
  
        // update total amount
        const totalAmountElement = document.querySelector('.flex.justify-between.font-bold p:last-child');
        // const currentTotal = parseFloat(totalAmountElement.innerText.replace('₹', ''));
        totalAmountElement.innerText = `₹${Math.floor(data.newTotal)}`;
      } else {
        document.getElementById('couponMessage').classList.remove('text-green-400');
        document.getElementById('couponMessage').classList.add('text-red-400');
  
      }
  
      // showing remove coupon button
      if (data.discountAmount) {
        document.getElementById('removeCouponBtn').classList.remove('hidden');
        
      }
    });
  
    // remove coupon code
    document.getElementById('removeCouponBtn').addEventListener('click', async () => {
      const response = await fetch('/checkout/coupons/remove', {method:'POST',
        headers:{
          'Content-Type':'application/json'
        }
      })
      const data = await response.json();
      // 
      document.getElementById('couponMessage').innerText = data.message;
  
      if(data.success) {
        document.getElementById('applyCouponBtn').classList.remove('hidden');
        document.getElementById('removeCouponBtn').classList.add('hidden');
        document.getElementById('couponMessage').classList.add('text-red-400');
  
        // update coupon discount
        document.querySelector('.text-red-500').innerText = `-₹${Math.floor(data.couponDiscount)}`
  
        // update total amount
        const totalAmountElement = document.querySelector('.flex.justify-between.font-bold p:last-child');
        totalAmountElement.innerText = `₹${Math.floor(data.newTotal)}`;
      } else {
        document.getElementById('couponMessage').classList.add('text-red-400');
      }
     
    })

</script>
